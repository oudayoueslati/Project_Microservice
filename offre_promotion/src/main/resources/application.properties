spring.application.name=offre_promotion
server.port=8088
spring.datasource.url=jdbc:mysql://mysql-container:3306/OffrePromotion?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
logging.level.root=info
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %-5level- %logger{60} -%msg %n
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
spring.cloud.compatibility-verifier.enabled=false
# Keycloak configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/microservice-realm
keycloak.realm=microservice-realm
keycloak.auth-server-url=http://localhost:8180
keycloak.resource=offre-promotion-client
keycloak.credentials.secret=lPlYol3m58IfLJ5TcaOVYGsTdqv8okBd
keycloak.use-resource-role-mappings=true
# OAuth2 Login configuration (pour la redirection vers Keycloak)
spring.security.oauth2.client.registration.keycloak.client-id=offre-promotion-client
spring.security.oauth2.client.registration.keycloak.client-secret=lPlYol3m58IfLJ5TcaOVYGsTdqv8okBd
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/realms/microservice-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8085/login/oauth2/code/keycloak